<?php

namespace App\Http\Controllers;

use App\Http\Requests\VulnerabilityRequest;
use App\Http\Resources\VulnerabilityResource;
use App\Models\Vulnerability;
use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;

class VulnerabilityController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @param Request $request
     * @return AnonymousResourceCollection
     */
    public function index(Request $request)
    {
        $vulnerabilities = Vulnerability::when(!blank($request->get('q')), function ($query) use ($request) {
            $query->where('title', 'rlike', $request->get('q'));
        })->paginate();

        return VulnerabilityResource::collection($vulnerabilities);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param VulnerabilityRequest $request
     * @return VulnerabilityResource
     */
    public function store(VulnerabilityRequest $request)
    {
        $vulnerability = Vulnerability::create($request->validated());

        return new VulnerabilityResource($vulnerability);
    }

    /**
     * Display the specified resource.
     *
     * @param int $id
     * @return VulnerabilityResource
     */
    public function show(int $id)
    {
        $vulnerability = Vulnerability::findOrFail($id);

        return new VulnerabilityResource($vulnerability);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param VulnerabilityRequest $request
     * @param int $id
     * @return VulnerabilityResource
     */
    public function update(VulnerabilityRequest $request, $id)
    {
        $vulnerability = Vulnerability::findOrFail($id);

        $vulnerability->update($request->validated());

        return new VulnerabilityResource($vulnerability);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param int $id
     * @return VulnerabilityResource
     */
    public function destroy(int $id)
    {
        $vulnerability = Vulnerability::findOrFail($id);

        $vulnerability->delete();

        return new VulnerabilityResource($vulnerability);
    }
}
